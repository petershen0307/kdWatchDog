package core

import (
	"fmt"
	"reflect"
	"testing"
)

func Test_downloadStockPrice_WhenCall_Success(t *testing.T) {
	testTable := []struct {
		stockID string
		period  PricePeriod
	}{
		{stockID: "006208", period: WeekPricePeriod},
		{stockID: "00692", period: WeekPricePeriod},
		// {stockID: "1227", period: WeekPricePeriod},
		// {stockID: "1229", period: WeekPricePeriod},
		// {stockID: "1231", period: WeekPricePeriod},
		// {stockID: "1233", period: WeekPricePeriod},
		// {stockID: "1259", period: WeekPricePeriod},
		// {stockID: "1722", period: WeekPricePeriod},
		// {stockID: "1726", period: WeekPricePeriod},
		// {stockID: "2204", period: WeekPricePeriod},
		// {stockID: "2884", period: WeekPricePeriod},
		// {stockID: "2886", period: WeekPricePeriod},
		// {stockID: "2891", period: WeekPricePeriod},
		// {stockID: "3388", period: WeekPricePeriod},
		// {stockID: "5876", period: WeekPricePeriod},
	}
	for _, test := range testTable {
		t.Run(fmt.Sprintf("stockID:(%v), period:(%v)", test.stockID, test.period), func(t *testing.T) {
			rawData, err := downloadStockPrice(test.stockID, test.period)
			if err != nil {
				t.Errorf("download stock price failed with stock id:(%v), time period:(%v)", test.stockID, test.period)
			}
			t.Logf("download string:%s", rawData)
		})
	}

}

func Test_parseStockPriceJSON_WhenCall_Success(t *testing.T) {
	gotStr := `null({"mkt":"10","id":"1234","perd":"d","type":"ta","mem":{"id":"1234","name":"黑松","125":29.95,"126":29.9,"638":0.0,"127":0.0},"ta":[{"t":20180928,"o":31.0,"h":31.0,"l":30.75,"c":30.8,"v":48},{"t":20181001,"o":30.85,"h":30.9,"l":30.75,"c":30.9,"v":78}]});`
	expectedResult := StockPriceInfo{
		ID:     "1234",
		Period: DailyPricePeriod,
		Mem: stockMemo{
			ID:   "1234",
			Name: "黑松",
		},
		PriceInfo: []dailyInfo{
			{
				Date:       20180928,
				OpenPrice:  31.0,
				HighPrice:  31.0,
				LowPrice:   30.75,
				ClosePrice: 30.8,
				Volume:     48,
			},
			{
				Date:       20181001,
				OpenPrice:  30.85,
				HighPrice:  30.9,
				LowPrice:   30.75,
				ClosePrice: 30.9,
				Volume:     78,
			},
		},
	}
	t.Run("test download data parsing", func(t *testing.T) {
		stockDailyInfo, err := parseStockPriceJSON(gotStr)
		if err != nil {
			t.Errorf("Result was incorrect, got %v", err)
		}
		if !reflect.DeepEqual(expectedResult, stockDailyInfo) {
			t.Errorf("Result was incorrect\ngot: %v\nwant:%v", stockDailyInfo, expectedResult)
		}
	})
}

func Test_parseStockPriceJSON(t *testing.T) {
	gotStr := `null({"mkt":"10","id":"1726","perd":"d","type":"ta","mem":{"id":"1726","name":"永記","128":7.0,"129":72.9,"130":72.9,"131":72.9,"132":80.1,"133":65.7,"455":72.9,"143":092739,"144":20190510,"404":3.0,"406":3.0E-6,"471":72.9,"413":1.0,"101":73.0,"102":73.6,"103":72.9,"423":0.22,"104":73.7,"105":72.8,"106":73.8,"107":72.7,"108":73.9,"172":0.0,"109":72.6,"110":74.4,"113":5.0,"114":2.0,"115":2.0,"116":1.0,"117":2.0,"118":5.0,"119":4.0,"184":0.0,"120":5.0,"185":0.0,"121":1.0,"122":2.0,"125":72.9,"126":72.9},"ta":[{"t":20181228,"o":70.0,"h":70.6,"l":70.0,"c":70.5,"v":6},{"t":20190102,"o":70.5,"h":70.9,"l":70.3,"c":70.8,"v":15},{"t":20190103,"o":70.5,"h":70.5,"l":70.3,"c":70.3,"v":2},{"t":20190104,"o":70.0,"h":70.5,"l":70.0,"c":70.5,"v":13},{"t":20190107,"o":70.5,"h":70.5,"l":70.1,"c":70.2,"v":16},{"t":20190108,"o":70.5,"h":70.5,"l":69.9,"c":70.1,"v":50},{"t":20190109,"o":70.2,"h":70.5,"l":70.2,"c":70.2,"v":10},{"t":20190110,"o":70.6,"h":70.6,"l":70.1,"c":70.1,"v":7},{"t":20190111,"o":70.3,"h":71.0,"l":70.2,"c":71.0,"v":22},{"t":20190114,"o":71.1,"h":71.1,"l":69.9,"c":70.0,"v":17},{"t":20190115,"o":71.1,"h":71.1,"l":70.1,"c":70.1,"v":12},{"t":20190116,"o":70.9,"h":70.9,"l":70.2,"c":70.2,"v":12},{"t":20190117,"o":71.0,"h":71.0,"l":70.5,"c":70.6,"v":7},{"t":20190118,"o":70.5,"h":71.0,"l":70.4,"c":71.0,"v":12},{"t":20190121,"o":71.0,"h":71.1,"l":70.8,"c":71.0,"v":25},{"t":20190123,"o":70.5,"h":70.7,"l":70.5,"c":70.7,"v":10},{"t":20190124,"o":70.6,"h":70.6,"l":70.5,"c":70.5,"v":11},{"t":20190125,"o":70.6,"h":71.2,"l":70.5,"c":71.2,"v":4},{"t":20190128,"o":71.5,"h":72.1,"l":71.5,"c":71.8,"v":18},{"t":20190129,"o":72.0,"h":72.5,"l":71.8,"c":71.8,"v":22},{"t":20190130,"o":72.6,"h":72.7,"l":72.3,"c":72.3,"v":6},{"t":20190211,"o":72.3,"h":72.7,"l":71.4,"c":72.0,"v":16},{"t":20190212,"o":72.0,"h":72.3,"l":71.0,"c":71.7,"v":22},{"t":20190213,"o":72.5,"h":72.6,"l":71.7,"c":72.0,"v":32},{"t":20190214,"o":72.1,"h":72.3,"l":72.1,"c":72.3,"v":15},{"t":20190215,"o":72.3,"h":72.3,"l":71.9,"c":71.9,"v":28},{"t":20190218,"o":72.1,"h":72.5,"l":72.0,"c":72.4,"v":15},{"t":20190219,"o":72.4,"h":72.4,"l":72.0,"c":72.2,"v":28},{"t":20190220,"o":72.3,"h":72.8,"l":72.3,"c":72.8,"v":62},{"t":20190221,"o":72.8,"h":72.8,"l":72.5,"c":72.6,"v":53},{"t":20190222,"o":72.7,"h":73.0,"l":72.6,"c":72.9,"v":21},{"t":20190225,"o":73.0,"h":73.5,"l":73.0,"c":73.1,"v":32},{"t":20190226,"o":73.0,"h":73.3,"l":72.5,"c":73.3,"v":22},{"t":20190227,"o":73.3,"h":73.5,"l":73.3,"c":73.3,"v":24},{"t":20190304,"o":73.3,"h":74.0,"l":73.3,"c":74.0,"v":18},{"t":20190305,"o":73.3,"h":73.8,"l":73.3,"c":73.6,"v":10},{"t":20190306,"o":73.5,"h":73.8,"l":73.4,"c":73.8,"v":15},{"t":20190307,"o":73.5,"h":73.8,"l":73.5,"c":73.5,"v":8},{"t":20190308,"o":73.1,"h":73.1,"l":73.0,"c":73.2,"v":5},{"t":20190311,"o":73.3,"h":73.5,"l":73.2,"c":73.5,"v":9},{"t":20190312,"o":73.5,"h":73.8,"l":73.5,"c":73.6,"v":17},{"t":20190313,"o":73.6,"h":73.9,"l":73.6,"c":73.9,"v":13},{"t":20190314,"o":73.9,"h":74.0,"l":73.9,"c":74.0,"v":5},{"t":20190315,"o":74.5,"h":74.5,"l":74.5,"c":74.5,"v":3},{"t":20190318,"o":74.6,"h":74.9,"l":74.6,"c":74.9,"v":19},{"t":20190319,"o":75.0,"h":75.0,"l":74.5,"c":74.5,"v":3},{"t":20190320,"o":74.5,"h":75.9,"l":74.5,"c":74.7,"v":23},{"t":20190322,"o":74.0,"h":74.5,"l":74.0,"c":74.5,"v":3},{"t":20190325,"o":73.4,"h":74.5,"l":73.3,"c":74.5,"v":11},{"t":20190326,"o":74.5,"h":74.5,"l":73.8,"c":74.5,"v":15},{"t":20190327,"o":74.5,"h":74.9,"l":74.1,"c":74.3,"v":23},{"t":20190328,"o":74.3,"h":75.0,"l":74.3,"c":75.0,"v":28},{"t":20190329,"o":76.1,"h":76.1,"l":74.8,"c":74.8,"v":12},{"t":20190401,"o":74.8,"h":74.8,"l":74.8,"c":74.8,"v":1},{"t":20190402,"o":74.8,"h":74.8,"l":74.5,"c":74.5,"v":17},{"t":20190403,"o":74.4,"h":74.5,"l":74.4,"c":74.5,"v":5},{"t":20190408,"o":73.8,"h":74.5,"l":73.7,"c":74.0,"v":35},{"t":20190409,"o":74.0,"h":74.0,"l":73.8,"c":73.8,"v":7},{"t":20190410,"o":73.8,"h":74.0,"l":73.8,"c":74.0,"v":12},{"t":20190411,"o":74.0,"h":74.0,"l":73.4,"c":74.0,"v":40},{"t":20190412,"o":73.6,"h":74.0,"l":73.6,"c":74.0,"v":10},{"t":20190415,"o":74.2,"h":74.2,"l":74.1,"c":74.1,"v":7},{"t":20190416,"o":73.6,"h":73.6,"l":73.5,"c":73.5,"v":3},{"t":20190417,"o":73.5,"h":75.0,"l":73.5,"c":73.6,"v":52},{"t":20190418,"o":73.6,"h":73.7,"l":73.4,"c":73.7,"v":17},{"t":20190419,"o":73.7,"h":73.7,"l":73.5,"c":73.5,"v":6},{"t":20190422,"o":73.5,"h":75.4,"l":73.5,"c":74.7,"v":13},{"t":20190423,"o":74.8,"h":74.8,"l":73.5,"c":73.6,"v":11},{"t":20190424,"o":74.3,"h":74.3,"l":74.3,"c":74.3,"v":1},{"t":20190425,"o":73.6,"h":73.6,"l":73.6,"c":73.6,"v":8},{"t":20190426,"o":73.8,"h":73.8,"l":73.5,"c":73.8,"v":11},{"t":20190429,"o":73.6,"h":73.6,"l":73.0,"c":73.0,"v":35},{"t":20190430,"o":73.2,"h":73.4,"l":73.1,"c":73.4,"v":11},{"t":20190502,"o":73.3,"h":73.3,"l":73.0,"c":73.1,"v":16},{"t":20190503,"o":73.3,"h":73.3,"l":73.1,"c":73.1,"v":20},{"t":20190506,"o":73.1,"h":73.8,"l":72.4,"c":73.8,"v":32},{"t":20190507,"o":73.8,"h":73.8,"l":72.8,"c":73.0,"v":7},{"t":20190508,"o":73.0,"h":73.1,"l":73.0,"c":73.0,"v":15},{"t":20190509,"o":73.9,"h":73.9,"l":72.9,"c":72.9,"v":7},{"t":20190510,"o":72.9,"h":72.9,"l":72.9,"c":72.9,"v":3}]})`
	_, err := parseStockPriceJSON(gotStr)
	if err != nil {
		t.Errorf("Result was incorrect, got %v", err)
	}
}
